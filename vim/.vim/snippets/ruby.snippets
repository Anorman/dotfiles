snippet desc
	describe "${1:message}" do
		${0:pending 'Not implemented'}
	end
snippet cont
	context "${1:message}" do
		${0:pending 'Not implemented'}
	end
snippet bef
	before do
		${0}
	end
snippet let
	let(:${1:object}) { ${0} }
snippet let!
	let!(:${1:object}) { ${0} }
snippet subj
	subject { ${0} }
snippet exp
	expect(${1:object}).to ${0}
snippet expb
	expect { ${1:object} }.to ${0}
snippet it
	it "${1:spec_name}" do
		${0}
	end
snippet do
	do
		${0}
	end
snippet dov
	do |${1:v}|
		${2}
	end
snippet cla
	class ${1}
		${0}
	end
snippet def
	def ${1:method_name}
		${0}
	end
